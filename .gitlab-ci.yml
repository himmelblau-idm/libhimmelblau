stages:
  - build
  - lint
  - test

.build_template: &rust_build_setup
  image: rust:latest
  before_script:
    - apt-get update && apt-get install -y libpam0g-dev libudev-dev libssl-dev pkg-config tpm-udev libtss2-dev libcap-dev libkrb5-dev libpcre2-dev libatk1.0-dev libgtk-3-dev libwebkit2gtk-4.1-dev clang libclang-dev
    - rustup component add clippy

build:
  <<: *rust_build_setup
  stage: build
  script:
    - cargo build --all-features --all-targets
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

build_c_example:
  <<: *rust_build_setup
  stage: build
  script:
    - cargo install cargo-c
    - cargo cbuild --lib --all-features --all-targets
    - TARGET_TRIPLE=$(rustc -vV | awk '/host:/ {print $2}')
    - cp -a "target/${TARGET_TRIPLE}/debug/include/himmelblau" .
    - cp "target/${TARGET_TRIPLE}/debug/libhimmelblau.so" .
    - ln -sf libhimmelblau.so libhimmelblau.so.0
    - CFLAGS="-I.. -o msal_example" LDFLAGS="-L.." make -C example all
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

clippy:
  <<: *rust_build_setup
  stage: lint
  script:
    - cargo clippy --all-features --all-targets -- -D warnings
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

test:
  <<: *rust_build_setup
  stage: test
  script:
    - cargo test --all-features
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
